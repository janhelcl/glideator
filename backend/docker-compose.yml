version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/glideator
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=glideator
    volumes:
      - postgres_new_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery-worker:
    build: .
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/glideator
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: celery -A app.celery_app worker --loglevel=info

  celery-beat:
    build: .
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/glideator
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: celery -A app.celery_app beat --loglevel=info

volumes:
  postgres_data:
  postgres_new_data: